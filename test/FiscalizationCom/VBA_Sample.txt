' Fiscalization API CIS 2012
' http://fiscalization.codeplex.com/
' Copyright (c) 2013 Tomislav Grospic

Public Function SendInvoiceTest()

	' .NET COM Interop
	Dim cisInterop As New FiscalizationComInterop
	
	' Set logging
	cisInterop.LogFileName = CurrentProject.Path + "\Fiscal.log"

	' Demo OIB & certificate
	Dim FileNum As Long
	FileNum = FreeFile
	Close FileNum
	Open CurrentProject.Path + "\DemoCertificate.txt" For Input As FileNum
	Dim oib
	Line Input #FileNum, oib
	Dim certPwd
	Line Input #FileNum, certPwd
	Dim certBase64
	Line Input #FileNum, certBase64

	' Get certificate from file or base64 encoded string
	Dim cert
	'Set cert = cisInterop.GetCertificateFile(CurrentProject.Path + "\<certificate file name>.pfx", "<password>")
	Set cert = cisInterop.GetCertificateString(certBase64, certPwd)
	
	' Create invoice number
	Dim invoiceNr As New BrojRacunaType
	With invoiceNr
		.BrOznRac = "1"
		.OznPosPr = "1"
		.OznNapUr = "1"
	End With
	
	' Create Racun
	Dim invoice As New RacunType
	With invoice
		.oib = oib
		.USustPdv = True
		.IznosUkupno = "123.45"
		.DatVrijeme = cisInterop.DateFormatLong(DateTime.Now)
		.OznSlijed = OznakaSlijednostiType.OznakaSlijednostiType_N
		.NacinPlac = NacinPlacanjaType.NacinPlacanjaType_G
		.OibOper = "98642375382"
		.NakDost = False
		.BrRac = invoiceNr
	End With
	
	' invoice.ZastKod <- filled with generated ZKI code - optional
	Call cisInterop.GenerateZki(invoice, (cert))
	
	Dim request As RacunZahtjev
	Set request = cisInterop.CreateInvoiceRequest(invoice)
		
	' Call GenerateZki and Sign request - optional
	Call cisInterop.Sign(request, (cert))
		
	' Send request
	Dim result As RacunOdgovor
	Set result = cisInterop.SendInvoiceRequest(request, (cert), 0, True)
	
	MsgBox (result.Jir)
	
End Function